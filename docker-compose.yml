services:
  anytimers-api:
    build:
      context: .
    ports:
      - 80:8080
    volumes:
      - .:/gradle/src
    depends_on:
      anytimers-db:
        condition: service_healthy
    environment:
      - ANYTIMERS_POSTGRES_USER=${ANYTIMERS_POSTGRES_USER}
      - ANYTIMERS_POSTGRES_PASSWORD=${ANYTIMERS_POSTGRES_PASSWORD}
    command: ./gradlew bootRun
    networks:
      - anytimers_network
  pgadmin:
    image: dpage/pgadmin4
    ports:
      - 5050:80
    environment:
      - PGADMIN_DEFAULT_EMAIL=${ANYTIMERS_PGADMIN_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${ANYTIMERS_PGADMIN_PASSWORD}
    volumes:
      - ./src/main/resources/servers.json:/pgadmin4/servers.json
    networks:
        - anytimers_network
    depends_on:
      - anytimers-db
  anytimers-db:
    image: postgres:17.4-alpine
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U anytimers -d ${ANYTIMERS_POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      - POSTGRES_USER=${ANYTIMERS_POSTGRES_USER}
      - POSTGRES_PASSWORD=${ANYTIMERS_POSTGRES_PASSWORD}
      - POSTGRES_DB=${ANYTIMERS_POSTGRES_DB}
    # volumes:
    #   -
    #   -
    networks:
      - anytimers_network
      
networks:
  anytimers_network:
    driver: bridge